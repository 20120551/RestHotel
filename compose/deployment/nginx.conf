user nginx;

worker_processes auto;
events {
    worker_connections 1024;
}

http {
    include /etc/nginx/proxy.conf;
    include /etc/nginx/mime.types;
    limit_req_zone $binary_remote_addr zone=one:10m rate=5r/s;
    server_tokens off;
    sendfile on;
    keepalive_timeout 29; # Adjust to the lowest possible value that makes sense for your use case.
    client_body_timeout 10; client_header_timeout 10; send_timeout 10;

    upstream httpWebapi {
        server rest_hotel:80;
    }

    upstream httpsWebApi {
        server rest_hotel:443;
    }

    upstream seqServer {
        server seq:80;
    }

    upstream kibanaServer {
        server kibana:5601;
    }

    upstream elkServer {
        server elk:9200;
    }

    upstream prometheusServer {
        server prometheus:9090;
    }

    upstream grafanaServer {
        server grafana:3000;
    }

    server {
        listen 80;
        server_name $hostname;

        # location /api {
        #     rewrite ^/api/(.*) /$1 break; # take .* and pass to /$1
        #     proxy_pass http://httpWebapi;
        #     limit_req zone=one burst=10 nodelay;
        # }

        location /seq {
            rewrite ^/seq/(.*) /$1 break; # take .* and pass to /$1
            rewrite ^/seq /seq/ permanent;
            proxy_pass http://seqServer;
            limit_req zone=one burst=120 nodelay;
        }

        location /grafana {
            rewrite ^/grafana/(.*) /$1 break; # take .* and pass to /$1
            proxy_pass http://grafanaServer;
            limit_req zone=one burst=10 nodelay;
        }
        location /prometheus {
            rewrite ^/prometheus/(.*) /$1 break; # take .* and pass to /$1
            rewrite ^/prometheus /prometheus/graph permanent;
            proxy_pass http://prometheusServer;
            limit_req zone=one burst=10 nodelay;
        }
        location /elasticsearch {
            rewrite ^/elasticsearch/(.*) /$1 break; # take .* and pass to /$1
            proxy_pass http://elkServer;
            limit_req zone=one burst=10 nodelay;
        }
        location /kibana {
            rewrite ^/kibana/(.*) /$1 break; # take .* and pass to /$1
            rewrite ^/kibana /kibana/app/home permanent;
            proxy_pass http://kibanaServer;
            limit_req zone=one burst=120 nodelay;
        }
    }

    # HTTPS server
    server {
        listen 443 ssl;
        server_name $hostname;
        ssl_certificate resthotel.csr.pem;
        ssl_certificate_key resthotel.key.pem;
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 5m;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # location for front end
        # location for back end
        location / {
            proxy_pass https://httpsWebApi;
            limit_req zone=one burst=10 nodelay;
        }
    }
}